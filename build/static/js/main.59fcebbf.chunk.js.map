{"version":3,"sources":["api/index.jsx","components/SearchBar.jsx","components/Card.jsx","components/SearchResults.jsx","components/DeckList.jsx","index.jsx"],"names":["fetchCards","a","name","text","axios","get","data","cards","SearchBar","setResults","useState","setName","setText","event","preventDefault","id","onSubmit","type","placeholder","value","onChange","target","Card","manaCost","flavor","imageUrl","addCardToDeck","removeCardFromDeck","className","src","onClick","SearchResults","results","length","map","result","DeckList","deck","cardCount","reduce","card","count","App","setDeck","nextDeck","index","findIndex","push","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59fcebbf.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst crawWurm = {\n    artist: \"Richard Sardinha\",\n    cmc: 6,\n    colorIdentity: [\"G\"],\n    colors: [\"Green\"],\n    flavor: \"The most terrifying thing about the craw wurm is probably the horrible crashing sound it makes as it speeds through the forest. This noise is so loud it echoes through the trees and seems to come from all directions at once.\",\n    id: \"ada04e68-5bec-59bf-8474-7e87e82da1e8\",\n    imageUrl: \"http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=130527&type=card\",\n    layout: \"normal\",\n    manaCost: \"{4}{G}{G}\",\n    multiverseid: 130527,\n    name: \"Craw Wurm\",\n    number: \"257\",\n    originalType: \"Creature - Wurm\",\n    power: \"6\",\n    printings: [\"10E\", \"2ED\", \"3ED\", \"4BB\", \"4ED\", \"5ED\", \"8ED\", \"9ED\", \"CED\", \"CEI\", \"FBB\", \"LEA\", \"LEB\", \"M10\", \"SUM\"],\n    rarity: \"Common\",\n    rulings: [],\n    set: \"10E\",\n    setName: \"Tenth Edition\",\n    subtypes: [\"Wurm\"],\n    supertypes: [],\n    toughness: \"4\",\n    type: \"Creature — Wurm\",\n    types: [\"Creature\"]\n  };\n\n  const demolish = {\n    artist: \"Gary Ruddell\",\n    cmc: 4,\n    colorIdentity: [\"R\"],\n    colors: [\"Red\"],\n    flavor: \"\\\"Pound the steel until it fits. Doesn't work? Bash to bits.\\\" —Dwarven forging song\",\n    id: \"a1901190-a766-5bf7-9dd7-9c1bdb0b4280\",\n    imageUrl: \"http://gatherer.wizards.com/Handlers/Image.ashx?multiverseid=129522&type=card\",\n    layout: \"normal\",\n    manaCost: \"{3}{R}\",\n    multiverseid: 129522,\n    name: \"Demolish\",\n    number: \"196\",\n    originalText: \"Destroy target artifact or land.\",\n    originalType: \"Sorcery\",\n    printings: [\"10E\", \"8ED\", \"9ED\", \"AVR\", \"KLD\", \"M11\", \"M14\", \"MB1\", \"ODY\", \"ORI\", \"THS\", \"WAR\", \"WC03\", \"XLN\", \"ZEN\"],\n    rarity: \"Common\",\n    rulings: [],\n    set: \"10E\",\n    setName: \"Tenth Edition\",\n    subtypes: [],\n    supertypes: [],\n    text: \"Destroy target artifact or land.\",\n    type: \"Sorcery\",\n    types: [\"Sorcery\"]\n  };\n\n  export async function fetchCards({ name, text }) {\n      try {\n        const { data } = await axios.get(\n          `https://api.magicthegathering.io/v1/cards?name=${ name }&text=${ text }`\n        );\n\n        return data.cards || [];\n      } catch (error) {\n        throw error;\n      }\n  }","import React, { useState } from 'react';\n\nimport {\n    fetchCards,\n} from '../api';\n\nconst SearchBar = ({ setResults }) => {\n    const [name, setName] = useState('');\n    const [text, setText] = useState('');\n\n    const handleNameChange = event => {\n        setName ( event.target.value );\n    }\n\n    const handleTextChange = event => {\n        setText( event.target.value )\n    }\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n\n        const cards = await fetchCards({\n            name,\n            text\n        });\n\n        setResults(cards)\n    }\n\n    return(\n        <div id=\"search\">\n            <h3>Look up cards here...</h3>\n            <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\" \n                placeholder=\"card name\"\n                value={ name }\n                onChange={ handleNameChange } />\n            <input\n                type=\"text\"\n                placeholder=\"card text\"\n                value={ text }\n                onChange={ handleTextChange } />\n            <button type=\"submit\">Search</button>\n             </form>\n        </div>\n    );\n}\n\nexport default SearchBar;","import React from 'react';\n\nimport './Card.css';\n\nconst Card = ({\n  id,\n  name,\n  type,\n  manaCost,\n  text,\n  flavor,\n  imageUrl,\n  addCardToDeck,\n  removeCardFromDeck\n}) => {\n  return (\n    <div className=\"Card\">\n      <div className=\"info\">\n        <p className=\"header\">\n          { name } - { manaCost }\n        </p>\n        <p className=\"type\">\n          { type }\n        </p>\n        <p className=\"text\">\n          { text }\n        </p>\n        <p className=\"flavor\">\n          { flavor }\n        </p>\n      </div>\n      <img className=\"preview\" src={ imageUrl } />\n      <div className=\"actions\">\n        <button\n          onClick={() => {\n            addCardToDeck({\n              id,\n              name\n            })\n          }}>\n            (+) Add to Deck\n          </button>\n        <button\n          onClick={() => {\n            removeCardFromDeck({\n              id\n            })\n          }}>\n            (-) Remove from Deck\n          </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Card;","import React from 'react';\n\nimport Card from './Card';\nimport './searchResults.css';\n\nconst SearchResults = ({ \nresults,\naddCardToDeck,\nremoveCardFromDeck\n}) => {\n    return (\n        <div id=\"results\">\n            <h3>\n                Here's what we found ({ results.length } results):\n            </h3>\n            <div className=\"CardList\">\n            {\n                results.map(result => (\n                    <Card \n                    key={ result.id }\n                    addCardToDeck={ addCardToDeck }\n                    removeCardFromDeck={ removeCardFromDeck }\n                    { ...result } />\n                ))\n            }\n            </div>\n        </div>\n    );\n}\n\nexport default SearchResults;","import React from 'react';\n\nconst DeckList = ({ \n    deck,\n    addCardToDeck,\n    removeCardFromDeck\n }) => {\n    let cardCount = deck.reduce((cardCount, card) => {\n        return cardCount + card.count\n    }, 0);\n\n    return (\n    <div id=\"deck\">\n        <h3>Your deck so far ({ cardCount } cards):</h3>\n        <div className=\"DeckList\">\n        {deck.map(({ id, name, count }) => (\n        <p key={ id }>\n          <span>\n            ({ count }x) { name }\n          </span><br /> \n          <button onClick={\n            () => addCardToDeck({ id, name })\n          }> + </button>\n          <button onClick={\n            () => removeCardFromDeck({ id })\n          }> - </button>\n        </p>\n      ))}\n      </div>\n    </div>\n  );\n}\n\nexport default DeckList;","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom'\nimport \"./index.css\"\n\nimport axios from 'axios'\n\nimport {\n    DeckList,\n    SearchBar,\n    SearchResults\n} from './components';\n\nimport {\n    fetchCards,\n} from './api';\n\nconst App = () => {\n    const [results, setResults] = useState([]);\n    const [deck, setDeck] = useState([]);\n\n    const addCardToDeck = ({ id, name }) => {\n        const nextDeck = [...deck];\n        const index = nextDeck.findIndex(card => card.id === id);\n\n        if (index > -1) {\n            nextDeck[index].count += 1;\n        } else {\n            nextDeck.push({\n                id,\n                name,\n                count: 1\n            });\n        }\n        setDeck(nextDeck);\n    }\n\n    const removeCardFromDeck = ({ id }) => {\n        const nextDeck = [...deck];\n        const index = nextDeck.findIndex(card => card.id === id);\n\n        if (index === -1) {\n            return;\n        }\n        if (nextDeck[index].count === 1) {\n            nextDeck.splice(index, 1);\n        } else {\n            nextDeck[index].count -= 1;\n        }\n        setDeck(nextDeck);\n    }\n\n    return (\n        <div id=\"app\">\n            <SearchBar setResults={ setResults } />\n            <SearchResults \n                results={ results }\n                addCardToDeck={ addCardToDeck }\n                removeCardFromDeck={ removeCardFromDeck } />\n            <DeckList \n                deck={ deck }\n                addCardToDeck={ addCardToDeck }\n                removeCardFromDeck={ removeCardFromDeck } />\n        </div>\n    );\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}